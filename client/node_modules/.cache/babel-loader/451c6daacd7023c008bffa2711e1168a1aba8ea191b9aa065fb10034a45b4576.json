{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sapek\\\\Downloads\\\\agroverse\\\\client\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  //   const sendMessage = async () => {\n  //     if (!input.trim()) return;\n\n  //     const userMsg = { sender: 'user', text: input };\n  //     setMessages([...messages, userMsg]);\n\n  //     try {\n  //       // Ensure the API endpoint is correct\n  //       const res = await axios.post('http://localhost:5000/chatbot', { message: input });\n\n  //       // Check if response is valid\n  //       if (res && res.data && res.data.reply) {\n  //         const botMsg = { sender: 'bot', text: res.data.reply };\n  //         setMessages(prev => [...prev, botMsg]);\n  //       } else {\n  //         const botMsg = { sender: 'bot', text: '❌ Something went wrong, no reply received' };\n  //         setMessages(prev => [...prev, botMsg]);\n  //       }\n\n  //     } catch (err) {\n  //       console.error(\"Error:\", err);\n  //       const botMsg = { sender: 'bot', text: '❌ Server is not responding' };\n  //       setMessages(prev => [...prev, botMsg]);\n  //     }\n\n  //     setInput('');\n  //   };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: input\n    };\n    setMessages([...messages, userMsg]);\n    try {\n      // Update the API endpoint to match your backend\n      const res = await axios.post('http://localhost:5000/chatbot', {\n        message: input\n      });\n      const botMsg = {\n        sender: 'bot',\n        text: res.data.reply\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      console.error('Error:', err);\n      const botMsg = {\n        sender: 'bot',\n        text: '❌ Server is not responding'\n      };\n      setMessages(prev => [...prev, botMsg]);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4 bg-white shadow-md rounded-md border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-72 overflow-y-auto mb-4 space-y-2\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `px-4 py-2 rounded-lg text-sm max-w-xs ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-black'}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border px-3 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMsg","sender","text","res","post","message","botMsg","data","reply","prev","err","console","error","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sapek/Downloads/agroverse/client/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n//   const sendMessage = async () => {\r\n//     if (!input.trim()) return;\r\n\r\n//     const userMsg = { sender: 'user', text: input };\r\n//     setMessages([...messages, userMsg]);\r\n\r\n//     try {\r\n//       // Ensure the API endpoint is correct\r\n//       const res = await axios.post('http://localhost:5000/chatbot', { message: input });\r\n      \r\n//       // Check if response is valid\r\n//       if (res && res.data && res.data.reply) {\r\n//         const botMsg = { sender: 'bot', text: res.data.reply };\r\n//         setMessages(prev => [...prev, botMsg]);\r\n//       } else {\r\n//         const botMsg = { sender: 'bot', text: '❌ Something went wrong, no reply received' };\r\n//         setMessages(prev => [...prev, botMsg]);\r\n//       }\r\n\r\n//     } catch (err) {\r\n//       console.error(\"Error:\", err);\r\n//       const botMsg = { sender: 'bot', text: '❌ Server is not responding' };\r\n//       setMessages(prev => [...prev, botMsg]);\r\n//     }\r\n\r\n//     setInput('');\r\n//   };\r\nconst sendMessage = async () => {\r\n  if (!input.trim()) return;\r\n\r\n  const userMsg = { sender: 'user', text: input };\r\n  setMessages([...messages, userMsg]);\r\n\r\n  try {\r\n    // Update the API endpoint to match your backend\r\n    const res = await axios.post('http://localhost:5000/chatbot', { message: input });\r\n    const botMsg = { sender: 'bot', text: res.data.reply };\r\n    setMessages(prev => [...prev, botMsg]);\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n    const botMsg = { sender: 'bot', text: '❌ Server is not responding' };\r\n    setMessages(prev => [...prev, botMsg]);\r\n  }\r\n\r\n  setInput('');\r\n};\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4 bg-white shadow-md rounded-md border\">\r\n      <div className=\"h-72 overflow-y-auto mb-4 space-y-2\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n            <p className={`px-4 py-2 rounded-lg text-sm max-w-xs ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-black'}`}>\r\n              {msg.text}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex gap-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 border px-3 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}