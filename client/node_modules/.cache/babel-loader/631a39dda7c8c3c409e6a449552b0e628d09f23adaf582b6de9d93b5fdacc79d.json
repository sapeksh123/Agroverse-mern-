{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sapek\\\\Downloads\\\\agroverse\\\\client\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: input\n    };\n    setMessages([...messages, userMsg]);\n    try {\n      const res = await axios.post('/api/chatbot', {\n        message: input\n      });\n      const botMsg = {\n        sender: 'bot',\n        text: res.data.reply\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      console.error(\"Error:\", err);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        overflowY: 'auto',\n        marginBottom: '10px'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'user' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            background: msg.sender === 'user' ? '#add8e6' : '#eee',\n            display: 'inline-block',\n            padding: '8px',\n            borderRadius: '8px'\n          },\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMsg","sender","text","res","post","message","botMsg","data","reply","prev","err","console","error","className","children","style","height","overflowY","marginBottom","map","msg","index","textAlign","background","display","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","gap","type","value","onChange","e","target","placeholder","flex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sapek/Downloads/agroverse/client/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMsg = { sender: 'user', text: input };\r\n    setMessages([...messages, userMsg]);\r\n\r\n    try {\r\n      const res = await axios.post('/api/chatbot', { message: input });\r\n      const botMsg = { sender: 'bot', text: res.data.reply };\r\n      setMessages(prev => [...prev, botMsg]);\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n    }\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbox\">\r\n      <div style={{ height: '300px', overflowY: 'auto', marginBottom: '10px' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.sender === 'user' ? 'right' : 'left' }}>\r\n            <p style={{ background: msg.sender === 'user' ? '#add8e6' : '#eee', display: 'inline-block', padding: '8px', borderRadius: '8px' }}>\r\n              {msg.text}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ display: 'flex', gap: '8px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          style={{ flex: 1 }}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}